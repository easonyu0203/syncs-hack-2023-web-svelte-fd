import{s as l,n}from"../chunks/scheduler.b5e21764.js";import{S as u,i as m,d as i,v as p}from"../chunks/index.731aee48.js";function s(e){const t={c:n,l:n,m:n,p:n,i:n,o:n,d:n};return i("SvelteRegisterBlock",{block:t,id:s.name,type:"component",source:"",ctx:e}),t}function g(e,t,c){let{$$slots:r={},$$scope:w}=t;p("Page",r,[]);let{data:o}=t;e.$$.on_mount.push(function(){o===void 0&&!("data"in t||e.$$.bound[e.$$.props.data])&&console.warn("<Page> was created without expected prop 'data'")});const d=["data"];return Object.keys(t).forEach(a=>{!~d.indexOf(a)&&a.slice(0,2)!=="$$"&&a!=="slot"&&console.warn(`<Page> was created with unknown prop '${a}'`)}),e.$$set=a=>{"data"in a&&c(0,o=a.data)},e.$capture_state=()=>({data:o}),e.$inject_state=a=>{"data"in a&&c(0,o=a.data)},t&&"$$inject"in t&&e.$inject_state(t.$$inject),[o]}class _ extends u{constructor(t){super(t),m(this,t,g,s,l,{data:0}),i("SvelteRegisterComponent",{component:this,tagName:"Page",options:t,id:s.name})}get data(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set data(t){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{_ as component};
